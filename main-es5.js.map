{"version":3,"sources":["webpack:///home/travis/build/adrien19/ng-components-ndiku/dist/ng-components-ndiku/fesm2015/ng-components-ndiku.js","webpack:///src/app/app.component.html","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/table-data/fake-data.ts","webpack:///src/app/table-data/table-demo.component.ts","webpack:///src/app/table-data/tableDataService.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["ClickElsewhereDirective","elementRef","ndikuClickedElseWhere","event","targetElement","target","nativeElement","contains","emit","ctorParameters","type","prototype","selector","importedModules","MaterialModule","declarations","imports","exports","NgComponentsNdikuService","inputValueChanged$","Éµprov","factory","NgComponentsNdikuService_Factory","token","providedIn","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","NgComponentsNdikuComponent","fb","ngComponentsNdikuService","matcher","_REQUIRED","_NOTEMPTY","_INTPUT_TYPE","_INPUT_ID","_INPUT_LABEL","_INPUT_PLACEHOLDER","_ON_COMPONENT_READY","validators","required","push","email","minLength","componentFormGroup","group","input","inputSub","controls","valueChanges","subscribe","value","next","onComponentReady","unsubscribe","template","styles","NgComponentsNdikuModule","NgComponentsNdikuSelectComponent","NgComponentsNdikuSelectModule","FormatCellPipe","currencyPipe","datePipe","percentPipe","format","symbol","undefined","formatType","Array","isArray","join","map","obj","name","currencySymbol","currencyCode","transform","dateFormat","dateTimeZone","percentFormat","TableType","ColumnSetting","ColumnMap","settings","access","object","primaryKey","alternativeKeys","key","header","editable","setting","_HEADER","slice","toUpperCase","replace","_FORMAT","_EDITABLE","TableInlineEditService","snackBar","newCellValue","dataSource$","snackBarMessage$","updateCellStyle$","clearSavedDataInitiated$","text","tableMouseDown","tableMouseUp","cellsType","dataCopy","table","dataSource","startCol","endCol","startRow","endRow","colId","rowId","i","record","columnMaps","editedCell","tableId","editedTimestamp","Date","saveEditedCell","Error","j","openSnackBar","updateSelectedCellsState","mouseDownColId","mouseUpColId","mouseDownRowId","mouseUpRowId","setSelectedCells","tableCellStates","FIRST_EDITABLE_ROW","LAST_EDITABLE_ROW","FIRST_EDITABLE_COL","LAST_EDITABLE_COL","firstEditableRow","lastEditableRow","firstEditableCol","lastEditableCol","updateSelectedCellsValues","end","length","isNotSpecialKeys","specialKeys","indexOfInArray","item","array","index","message","action","snackBarMessage","TableInlineEditService_Factory","TableLayoutComponent","tableInlineEditService","saveTableButtonClicked","editTableButtonClicked","types","editingMode","snackBarServiceSub","inlineEditable","handleUnmatchingCellTypes","changes","col","Object","keys","displayedColumns","receivedSnackBarMessage","snackBarRef","open","duration","afterDismissed","enterKeyPressed","onAction","enableEditingMode","stopImmediatePropagation","onKeyUpTable","onMouseDownTable","onMouseUpTable","tableType","clickedTable","keyEventData","isTrusted","keyBoardEvent","KeyboardEvent","onKeyUp","_CAPTION","_SETTINGS","_TABLE","StyleCellDirective","el","renderer","visualizeEditedCells","cellsStatesSub","clearEditedVisualsSub","handlestylingUndefinedValues","cellStates","handleStylingSelectedCells","ndikuStyleCell","contentType","MatTable","setStyle","DefaultTable","selectCell","tableCells","addClass","removeClass","hasBeenEdited","editedCells","getEditedCellsByTableId","cell","TableLayoutModule","providers","TableEntryType","tableTypeName","nEditableCols","_ALL_TABLES_STATES","_EDITED_CELLS","nRows","createCellsStates","temp","iIndex","jIndex","filter","foundEdited","find","rowNumber","colNumber","_TABLE_TYPE","_TABLE_ID","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","module","id","AppComponent","title","enteredEmail","enteredPassword","editBaseForm","emailValueSubscription","passwordValueSubscription","childName","childGroup","addControl","AppModule","bootstrap","PROJECTS","cost","FIRST_FLIGHT","status","launch","TOTAL_COST","PERSONNEL","job","YEAR_JOINED","missions","crewWith","manager","TableDemoComponent","tableDataService","inlineTableDataService","projectsTableConfigSettings","personnelSettings","inlineTableDataSub","projects","getProjects","people","getPersonnel","tableConfig","peapleTableConfig","data","console","log","clearEditedCells","TableDataService","environment","production","bootstrapModule","err","error"],"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","file":"main-es5.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { EventEmitter, ElementRef, Output, HostListener, Directive, NgModule, ÉµÉµdefineInjectable, Injectable, Input, Component, Pipe, ÉµÉµinject, Renderer2 } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { Subject } from 'rxjs';\nimport { Validators, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CommonModule, CurrencyPipe, DatePipe, PercentPipe } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nlet ClickElsewhereDirective = class ClickElsewhereDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.ndikuClickedElseWhere = new EventEmitter();\n    }\n    onClick(event) {\n        const targetElement = event.target;\n        // Check if the click was outside the element\n        if (targetElement &&\n            !this.elementRef.nativeElement.contains(targetElement)) {\n            this.ndikuClickedElseWhere.emit();\n        }\n    }\n};\nClickElsewhereDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n__decorate([\n    Output()\n], ClickElsewhereDirective.prototype, \"ndikuClickedElseWhere\", void 0);\n__decorate([\n    HostListener('document:click', ['$event'])\n], ClickElsewhereDirective.prototype, \"onClick\", null);\nClickElsewhereDirective = __decorate([\n    Directive({ selector: '[ndikuClickElseWhere]' })\n], ClickElsewhereDirective);\n\nconst importedModules = [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatSnackBarModule,\n];\nlet MaterialModule = class MaterialModule {\n};\nMaterialModule = __decorate([\n    NgModule({\n        declarations: [ClickElsewhereDirective],\n        imports: importedModules,\n        exports: [...importedModules, ClickElsewhereDirective],\n    })\n], MaterialModule);\n\nlet NgComponentsNdikuService = class NgComponentsNdikuService {\n    constructor() {\n        this.inputValueChanged$ = new Subject();\n    }\n};\nNgComponentsNdikuService.Éµprov = ÉµÉµdefineInjectable({ factory: function NgComponentsNdikuService_Factory() { return new NgComponentsNdikuService(); }, token: NgComponentsNdikuService, providedIn: \"root\" });\nNgComponentsNdikuService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], NgComponentsNdikuService);\n\n/** Error when invalid control is dirty, touched, or submitted. */\nclass MyErrorStateMatcher {\n    isErrorState(control, form) {\n        const isSubmitted = form && form.submitted;\n        return !!(control &&\n            control.invalid &&\n            (control.dirty || control.touched || isSubmitted));\n    }\n}\n\nlet NgComponentsNdikuComponent = class NgComponentsNdikuComponent {\n    constructor(fb, ngComponentsNdikuService) {\n        this.fb = fb;\n        this.ngComponentsNdikuService = ngComponentsNdikuService;\n        this.matcher = new MyErrorStateMatcher();\n        this._REQUIRED = false;\n        this._NOTEMPTY = false;\n        this._INTPUT_TYPE = 'text';\n        this._INPUT_ID = '';\n        this._INPUT_LABEL = '';\n        this._INPUT_PLACEHOLDER = '';\n        this._ON_COMPONENT_READY = new EventEmitter();\n    }\n    get required() {\n        return this._REQUIRED;\n    }\n    set required(value) {\n        this._REQUIRED = coerceBooleanProperty(value);\n    }\n    get notEmpty() {\n        return this._NOTEMPTY;\n    }\n    set notEmpty(value) {\n        this._NOTEMPTY = coerceBooleanProperty(value);\n    }\n    get type() {\n        return this._INTPUT_TYPE;\n    }\n    set type(value) {\n        this._INTPUT_TYPE = value;\n    }\n    get id() {\n        return this._INPUT_ID;\n    }\n    set id(value) {\n        this._INPUT_ID = value;\n    }\n    get label() {\n        return this._INPUT_LABEL;\n    }\n    set label(value) {\n        this._INPUT_LABEL = value;\n    }\n    get placeholder() {\n        return this._INPUT_PLACEHOLDER;\n    }\n    set placeholder(value) {\n        this._INPUT_PLACEHOLDER = value;\n    }\n    get onComponentReady() {\n        return this._ON_COMPONENT_READY;\n    }\n    set onComponentReady(value) {\n        this._ON_COMPONENT_READY = value;\n    }\n    ngOnInit() {\n        // construct validators based on component input properties\n        const validators = [];\n        if (this.required) {\n            validators.push(Validators.required);\n        }\n        if (this.type === 'email') {\n            validators.push(Validators.email);\n        }\n        if (this.type === 'password') {\n            validators.push(Validators.minLength(6));\n        }\n        this.componentFormGroup = this.fb.group({\n            input: ['', validators],\n        });\n        this.inputSub = this.componentFormGroup.controls.input.valueChanges.subscribe((value) => {\n            this.ngComponentsNdikuService.inputValueChanged$.next(value);\n        });\n        this.onComponentReady.emit(this.componentFormGroup);\n    }\n    ngOnDestroy() {\n        if (this.ngComponentsNdikuService.inputValueChanged$) {\n            this.ngComponentsNdikuService.inputValueChanged$.unsubscribe();\n        }\n        if (this.inputSub) {\n            this.inputSub.unsubscribe();\n        }\n    }\n};\nNgComponentsNdikuComponent.ctorParameters = () => [\n    { type: FormBuilder },\n    { type: NgComponentsNdikuService }\n];\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"required\", null);\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"notEmpty\", null);\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"type\", null);\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"id\", null);\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"label\", null);\n__decorate([\n    Input()\n], NgComponentsNdikuComponent.prototype, \"placeholder\", null);\n__decorate([\n    Output()\n], NgComponentsNdikuComponent.prototype, \"onComponentReady\", null);\nNgComponentsNdikuComponent = __decorate([\n    Component({\n        selector: 'ndiku-ng-input',\n        template: `\n    <form [formGroup]=\"componentFormGroup\">\n      <mat-form-field>\n        <mat-label *ngIf=\"label\">{{ label }}</mat-label>\n        <input\n          matInput\n          [type]=\"type\"\n          [id]=\"id\"\n          [placeholder]=\"placeholder\"\n          formControlName=\"input\"\n          [errorStateMatcher]=\"matcher\"\n        />\n\n        <mat-error\n          *ngIf=\"\n            type === 'email' &&\n            required &&\n            componentFormGroup.controls.input.hasError('required')\n          \"\n        >\n          email field is required.\n        </mat-error>\n        <mat-error\n          *ngIf=\"\n            type === 'email' &&\n            required &&\n            !componentFormGroup.controls.input.hasError('required') &&\n            !componentFormGroup.controls.input.valid\n          \"\n        >\n          Please enter valid email.\n        </mat-error>\n        <mat-error\n          *ngIf=\"\n            type === 'email' &&\n            !required &&\n            !componentFormGroup.controls.input.valid\n          \"\n        >\n          Please enter valid email.\n        </mat-error>\n\n        <mat-error\n          *ngIf=\"\n            type === 'password' &&\n            required &&\n            componentFormGroup.controls.input.hasError('required')\n          \"\n        >\n          password field is required.\n        </mat-error>\n\n        <mat-error\n          *ngIf=\"\n            type !== 'email' &&\n            type !== 'password' &&\n            required &&\n            componentFormGroup.controls.input.hasError('required')\n          \"\n        >\n          Please enter valid input.\n        </mat-error>\n      </mat-form-field>\n    </form>\n  `,\n        styles: ['']\n    })\n], NgComponentsNdikuComponent);\n\nlet NgComponentsNdikuModule = class NgComponentsNdikuModule {\n};\nNgComponentsNdikuModule = __decorate([\n    NgModule({\n        declarations: [NgComponentsNdikuComponent],\n        imports: [\n            BrowserModule,\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            MaterialModule,\n            BrowserAnimationsModule,\n        ],\n        exports: [NgComponentsNdikuComponent],\n    })\n], NgComponentsNdikuModule);\n\nlet NgComponentsNdikuSelectComponent = class NgComponentsNdikuSelectComponent {\n};\n__decorate([\n    Input()\n], NgComponentsNdikuSelectComponent.prototype, \"name\", void 0);\nNgComponentsNdikuSelectComponent = __decorate([\n    Component({\n        selector: 'ndiku-ng-select',\n        template: `<h2>Welcome to {{ name }} demo!</h2>`\n    })\n], NgComponentsNdikuSelectComponent);\n\nlet NgComponentsNdikuSelectModule = class NgComponentsNdikuSelectModule {\n};\nNgComponentsNdikuSelectModule = __decorate([\n    NgModule({\n        declarations: [NgComponentsNdikuSelectComponent],\n        exports: [NgComponentsNdikuSelectComponent],\n    })\n], NgComponentsNdikuSelectModule);\n\nlet FormatCellPipe = class FormatCellPipe {\n    constructor(currencyPipe, datePipe, percentPipe) {\n        this.currencyPipe = currencyPipe;\n        this.datePipe = datePipe;\n        this.percentPipe = percentPipe;\n    }\n    transform(value, format) {\n        const symbol = '';\n        if (value === undefined) {\n            return 'not available';\n        }\n        if (format.formatType === 'default') {\n            if (Array.isArray(value)) {\n                if (typeof value[0] !== 'object') {\n                    return value.join(', ');\n                }\n                else {\n                    return value\n                        .map((obj) => {\n                        return obj.name;\n                    })\n                        .join(', ');\n                }\n            }\n            if (typeof value === 'object') {\n                return value.name;\n            }\n        }\n        if (format.formatType === 'currency') {\n            if (format.currencySymbol && format.currencyCode) {\n                return this.currencyPipe.transform(value, format.currencyCode, format.currencySymbol);\n            }\n            else if (format.currencyCode) {\n                return this.currencyPipe.transform(value, format.currencyCode);\n            }\n            else if (format.currencySymbol) {\n                return this.currencyPipe.transform(value, format.currencySymbol);\n            }\n            else {\n                return this.currencyPipe.transform(value);\n            }\n        }\n        if (format.formatType === 'date') {\n            if (format.dateFormat && format.dateTimeZone) {\n                return this.datePipe.transform(value, format.dateFormat, format.dateTimeZone);\n            }\n            else if (format.dateFormat) {\n                return this.datePipe.transform(value, format.dateFormat);\n            }\n            else if (format.dateTimeZone) {\n                return this.datePipe.transform(value, format.dateTimeZone);\n            }\n            else {\n                return this.datePipe.transform(value);\n            }\n        }\n        if (format.formatType === 'percent') {\n            if (format.percentFormat) {\n                return this.percentPipe.transform(value, format.percentFormat);\n            }\n            else {\n                return this.percentPipe.transform(value);\n            }\n        }\n        return value;\n    }\n};\nFormatCellPipe.ctorParameters = () => [\n    { type: CurrencyPipe },\n    { type: DatePipe },\n    { type: PercentPipe }\n];\nFormatCellPipe = __decorate([\n    Pipe({ name: 'formatCell' })\n], FormatCellPipe);\n\nvar TableType;\n(function (TableType) {\n    TableType[TableType[\"MatTable\"] = 0] = \"MatTable\";\n    TableType[TableType[\"DefaultTable\"] = 1] = \"DefaultTable\";\n})(TableType || (TableType = {}));\nclass ColumnSetting {\n}\nclass ColumnMap {\n    constructor(settings) {\n        this.access = function (object) {\n            if (object[this.primaryKey] || !this.alternativeKeys) {\n                return this.primaryKey;\n            }\n            for (const key of this.alternativeKeys) {\n                if (object[key]) {\n                    return key;\n                }\n            }\n            return this.primaryKey;\n        };\n        this.primaryKey = settings.primaryKey;\n        this.header = settings.header;\n        this.format = settings.format;\n        this.alternativeKeys = settings.alternativeKeys;\n        this.editable = settings.editable;\n    }\n    set header(setting) {\n        this._HEADER = setting\n            ? setting\n            : this.primaryKey.slice(0, 1).toUpperCase() +\n                this.primaryKey.replace(/_/g, ' ').slice(1);\n    }\n    get header() {\n        return this._HEADER;\n    }\n    set format(setting) {\n        this._FORMAT = setting ? setting : { formatType: 'default' };\n    }\n    get format() {\n        return this._FORMAT;\n    }\n    set editable(setting) {\n        this._EDITABLE = setting ? setting : false;\n    }\n    get editable() {\n        return this._EDITABLE;\n    }\n}\n\nlet TableInlineEditService = class TableInlineEditService {\n    constructor(snackBar) {\n        this.snackBar = snackBar;\n        this.newCellValue = '';\n        this.dataSource$ = new Subject();\n        this.snackBarMessage$ = new Subject();\n        this.updateCellStyle$ = new Subject();\n        this.clearSavedDataInitiated$ = new Subject();\n    }\n    /**\n     * @description updates selected cell states\n     * Update table's dataSource\n     * @param text contains user entered value\n     */\n    updateSelectedCellsValues(text) {\n        if (text == null) {\n            return;\n        }\n        if (this.tableMouseDown && this.tableMouseUp) {\n            if (this.tableMouseDown.cellsType === this.tableMouseUp.cellsType) {\n                const dataCopy = this.table.dataSource.slice();\n                let startCol;\n                let endCol;\n                let startRow;\n                let endRow;\n                if (this.tableMouseDown.colId <= this.tableMouseUp.colId) {\n                    endCol = this.tableMouseUp.colId;\n                    startCol = this.tableMouseDown.colId;\n                }\n                else {\n                    endCol = this.tableMouseDown.colId;\n                    startCol = this.tableMouseUp.colId;\n                }\n                if (this.tableMouseDown.rowId <= this.tableMouseUp.rowId) {\n                    startRow = this.tableMouseDown.rowId;\n                    endRow = this.tableMouseUp.rowId;\n                }\n                else {\n                    endRow = this.tableMouseDown.rowId;\n                    startRow = this.tableMouseUp.rowId;\n                }\n                // --Edit cells from the same column\n                if (startCol === endCol) {\n                    for (let i = startRow; i <= endRow; i++) {\n                        const record = dataCopy[i];\n                        if (record) {\n                            dataCopy[i][this.columnMaps[startCol].access(record)] = text;\n                            const editedCell = {\n                                rowId: i,\n                                colId: startCol,\n                                header: this.columnMaps[startCol].header,\n                                newCellValue: text,\n                                tableId: this.table.tableId,\n                                editedTimestamp: +new Date(),\n                            };\n                            this.table.saveEditedCell(editedCell);\n                        }\n                        else {\n                            throw new Error('No record found!');\n                        }\n                    }\n                }\n                else {\n                    // --Edit cells starting and ending not on the same column\n                    for (let i = startRow; i <= endRow; i++) {\n                        for (let j = startCol; j <= endCol; j++) {\n                            const record = dataCopy[i];\n                            if (record) {\n                                dataCopy[i][this.columnMaps[j].access(record)] = text;\n                                const editedCell = {\n                                    rowId: i,\n                                    colId: j,\n                                    header: this.columnMaps[j].header,\n                                    newCellValue: text,\n                                    tableId: this.table.tableId,\n                                    editedTimestamp: +new Date(),\n                                };\n                                this.table.saveEditedCell(editedCell);\n                            }\n                            else {\n                                throw new Error('No record found!');\n                            }\n                        }\n                    }\n                }\n                // dataSource = dataCopy;\n                this.table.dataSource = dataCopy;\n                this.dataSource$.next({ table: this.table });\n            }\n            else {\n                this.openSnackBar('The selected cells dont have the same type.', 'DISMISS');\n            }\n        }\n    }\n    /**\n     * @description updates cell properties of selected cell on mouse pressed\n     * @param rowId contains row number\n     * @param colId contains column number\n     * @param cellsType contains header as string\n     */\n    onMouseDownTable(rowId, colId, cellsType) {\n        this.tableMouseDown = { rowId, colId, cellsType };\n    }\n    /**\n     * @description updates cell properties of selected cell on mouse released\n     * @param rowId contains row number\n     * @param colId contains column number\n     * @param cellsType contains header as string\n     */\n    onMouseUpTable(rowId, colId, cellsType) {\n        this.tableMouseUp = { rowId, colId, cellsType };\n        if (this.tableMouseDown) {\n            this.newCellValue = '';\n            this.updateSelectedCellsState(this.tableMouseDown.colId, this.tableMouseUp.colId, this.tableMouseDown.rowId, this.tableMouseUp.rowId);\n        }\n    }\n    /**\n     * @description Update selectedCols && selectedRows arrays\n     * @param mouseDownColId contains column number of selected cell when mouse pressed\n     * @param mouseUpColId contains column number of selected cell when mouse released\n     * @param mouseDownRowId contains row number of selected cell when mouse pressed\n     * @param mouseUpRowId contains row number of selected cell when mouse released\n     */\n    updateSelectedCellsState(mouseDownColId, mouseUpColId, mouseDownRowId, mouseUpRowId) {\n        // init selected cells\n        this.setSelectedCells(this.table.tableCellStates.FIRST_EDITABLE_ROW, this.table.tableCellStates.LAST_EDITABLE_ROW, this.table.tableCellStates.FIRST_EDITABLE_COL, this.table.tableCellStates.LAST_EDITABLE_COL, false);\n        // update selected cells\n        let startCol;\n        let endCol;\n        let startRow;\n        let endRow;\n        if (mouseDownColId <= mouseUpColId) {\n            startCol = mouseDownColId;\n            endCol = mouseUpColId;\n        }\n        else {\n            endCol = mouseDownColId;\n            startCol = mouseUpColId;\n        }\n        if (mouseDownRowId <= mouseUpRowId) {\n            startRow = mouseDownRowId;\n            endRow = mouseUpRowId;\n        }\n        else {\n            endRow = mouseDownRowId;\n            startRow = mouseUpRowId;\n        }\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startCol; j <= endCol; j++) {\n                this.table.tableCellStates.tableCellStates[i][j] = true;\n            }\n        }\n        this.setSelectedCells(startRow, endRow, startCol, endCol, true);\n    }\n    /**\n     * @description sets selected cell properties\n     * @param firstEditableRow contains row number of first selected cell\n     * @param lastEditableRow contains row number of last selected cell\n     * @param firstEditableCol contains column number of first selected\n     * @param lastEditableCol contains column number of last selected cell\n     * @param value contains true or false to indicate selected or unselected\n     */\n    setSelectedCells(firstEditableRow, lastEditableRow, firstEditableCol, lastEditableCol, value) {\n        for (let i = firstEditableRow; i <= lastEditableRow; i++) {\n            for (let j = firstEditableCol; j <= lastEditableCol; j++) {\n                this.table.tableCellStates.tableCellStates[i][j] = value;\n            }\n        }\n        this.updateCellStyle$.next(); // sending an event to update the selected cells in directive\n    }\n    /**\n     * @description After the user enters a new value, all selected cells must be updated\n     * @param event contains keyboard related event data\n     */\n    onKeyUpTable(event) {\n        // If no cell is selected then ignore keyUp event\n        if (this.tableMouseDown && this.tableMouseUp) {\n            if (event.key === 'Delete') {\n                this.newCellValue = '';\n                this.updateSelectedCellsValues(this.newCellValue);\n            }\n            else if (event.key === 'Backspace') {\n                // 'delete' key is pressed\n                const end = this.newCellValue.length - 1;\n                this.newCellValue = this.newCellValue.slice(0, end);\n                this.updateSelectedCellsValues(this.newCellValue);\n            }\n            else if (this.isNotSpecialKeys(event)) {\n                // key is not specialKeys\n                this.newCellValue += event.key;\n                this.updateSelectedCellsValues(this.newCellValue);\n            }\n            if (event.key === 'Enter') {\n                this.setSelectedCells(this.table.tableCellStates.FIRST_EDITABLE_ROW, this.table.tableCellStates.LAST_EDITABLE_ROW, this.table.tableCellStates.FIRST_EDITABLE_COL, this.table.tableCellStates.LAST_EDITABLE_COL, false);\n            }\n        }\n    }\n    /**\n     * @description returns whether a keyboard key is a special key\n     * @param event contains keyboard related event data\n     */\n    isNotSpecialKeys(event) {\n        const specialKeys = [\n            'Enter',\n            'PrintScreen',\n            'Escape',\n            'cControl',\n            'NumLock',\n            'PageUp',\n            'PageDown',\n            'End',\n            'Home',\n            'Insert',\n            'ContextMenu',\n            'Control',\n            'ControlAltGraph',\n            'Alt',\n            'Meta',\n            'Shift',\n            'CapsLock',\n            'TabTab',\n            'ArrowRight',\n            'ArrowLeft',\n            'ArrowDown',\n            'ArrowUp',\n            'Pause',\n            'ScrollLock',\n            'Dead',\n            '',\n            'F1',\n            'F2',\n            'F3',\n            'F4',\n            'F5',\n            'F6',\n            'F7',\n            'F8',\n            'F9',\n            'F10',\n            'F11',\n            'F12',\n        ];\n        return this.indexOfInArray(event.key, specialKeys) === -1;\n    }\n    /**\n     * @description returns an index of item in array\n     * @param item contains keyboard key to evaluate\n     * @param array contains array of keyboard keys\n     */\n    indexOfInArray(item, array) {\n        let index = -1;\n        for (let i = 0; i < array.length; i++) {\n            if (array[i] === item) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    /**\n     * @description emits an event to open a snack bar\n     * @param message contains a message as a string\n     * @param action contains action key as string\n     */\n    openSnackBar(message, action) {\n        const snackBarMessage = {\n            message,\n            action,\n        };\n        this.snackBarMessage$.next(snackBarMessage);\n    }\n};\nTableInlineEditService.ctorParameters = () => [\n    { type: MatSnackBar }\n];\nTableInlineEditService.Éµprov = ÉµÉµdefineInjectable({ factory: function TableInlineEditService_Factory() { return new TableInlineEditService(ÉµÉµinject(MatSnackBar)); }, token: TableInlineEditService, providedIn: \"root\" });\nTableInlineEditService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], TableInlineEditService);\n\nlet TableLayoutComponent = class TableLayoutComponent {\n    constructor(snackBar, tableInlineEditService) {\n        this.snackBar = snackBar;\n        this.tableInlineEditService = tableInlineEditService;\n        this.saveTableButtonClicked = new EventEmitter();\n        this.editTableButtonClicked = new EventEmitter();\n        this.types = TableType;\n        this.editingMode = false;\n    }\n    get caption() {\n        return this._CAPTION;\n    }\n    set caption(value) {\n        this._CAPTION = value;\n    }\n    get settings() {\n        return this._SETTINGS;\n    }\n    set settings(value) {\n        this._SETTINGS = value;\n    }\n    get table() {\n        return this._TABLE;\n    }\n    set table(tableType) {\n        this._TABLE = tableType;\n    }\n    ngOnDestroy() {\n        if (this.snackBarServiceSub) {\n            this.snackBarServiceSub.unsubscribe();\n        }\n    }\n    ngOnInit() {\n        if (this.table.inlineEditable) {\n            this.tableInlineEditService.table = this.table;\n            this.handleUnmatchingCellTypes();\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes.settings) {\n            if (this.settings) {\n                // when settings provided\n                this.columnMaps = this.settings.map((col) => new ColumnMap(col));\n            }\n            else {\n                // no settings, create column maps with defaults\n                this.columnMaps = Object.keys(this.table.dataSource[0]).map((key) => {\n                    return new ColumnMap({ primaryKey: key });\n                });\n            }\n            this.displayedColumns = this.columnMaps.map((col) => col.header);\n        }\n    }\n    handleUnmatchingCellTypes() {\n        this.snackBarServiceSub = this.tableInlineEditService.snackBarMessage$.subscribe((receivedSnackBarMessage) => {\n            if (receivedSnackBarMessage) {\n                const snackBarRef = this.snackBar.open(receivedSnackBarMessage.message, receivedSnackBarMessage.action, { duration: 3000 });\n                if (receivedSnackBarMessage.action === 'DISMISS') {\n                    snackBarRef.afterDismissed().subscribe(() => {\n                        this.enterKeyPressed();\n                    });\n                    snackBarRef.onAction().subscribe(() => {\n                        this.enterKeyPressed();\n                    });\n                }\n            }\n        });\n    }\n    onKeyUp(event) {\n        if (this.table && this.table.enableEditingMode) {\n            event.stopImmediatePropagation();\n            this.tableInlineEditService.onKeyUpTable(event);\n        }\n    }\n    onMouseDown(rowId, colId, cellsType) {\n        if (this.table && this.table.enableEditingMode) {\n            this.tableInlineEditService.table = this.table;\n            this.tableInlineEditService.columnMaps = this.columnMaps;\n            this.tableInlineEditService.onMouseDownTable(rowId, colId, cellsType);\n        }\n    }\n    onMouseUp(rowId, colId, cellsType) {\n        if (this.table && this.table.enableEditingMode) {\n            this.tableInlineEditService.onMouseUpTable(rowId, colId, cellsType);\n        }\n    }\n    createCellId(tableType, i, j) {\n        return `${tableType}${i}${j}`;\n    }\n    /**\n     * @description Enables table editing mode. Emits bindable event\n     * @param clickedTable contains table\n     */\n    onEditTable(clickedTable) {\n        this.saveTableButtonClicked.emit(clickedTable);\n        this.editingMode = true;\n        clickedTable.enableEditingMode = true;\n    }\n    /**\n     * @description clears cell/cells selection, disables table editting mode. Emits bindable event with table data.\n     * @param clickedTable contains table\n     */\n    onSaveTable(clickedTable) {\n        this.editTableButtonClicked.emit(clickedTable);\n        this.enterKeyPressed();\n        clickedTable.enableEditingMode = false;\n        this.editingMode = false;\n    }\n    /**\n     * @description Creates a Keyboard event to save or cancel a cell/cells selection\n     */\n    enterKeyPressed() {\n        if (this.table && this.table.enableEditingMode) {\n            const keyEventData = { isTrusted: true, key: 'Enter' };\n            const keyBoardEvent = new KeyboardEvent('keyup', keyEventData);\n            keyBoardEvent.stopImmediatePropagation();\n            this.onKeyUp(keyBoardEvent);\n        }\n    }\n};\nTableLayoutComponent.ctorParameters = () => [\n    { type: MatSnackBar },\n    { type: TableInlineEditService }\n];\n__decorate([\n    Input()\n], TableLayoutComponent.prototype, \"caption\", null);\n__decorate([\n    Input()\n], TableLayoutComponent.prototype, \"settings\", null);\n__decorate([\n    Input()\n], TableLayoutComponent.prototype, \"table\", null);\n__decorate([\n    Output()\n], TableLayoutComponent.prototype, \"saveTableButtonClicked\", void 0);\n__decorate([\n    Output()\n], TableLayoutComponent.prototype, \"editTableButtonClicked\", void 0);\n__decorate([\n    HostListener('document:keyup', ['$event'])\n], TableLayoutComponent.prototype, \"onKeyUp\", null);\nTableLayoutComponent = __decorate([\n    Component({\n        selector: 'ndiku-table-layout',\n        template: `\n    <ng-container [ngSwitch]=\"table.tableType\">\n      <table\n        class=\"table\"\n        [id]=\"table.tableId\"\n        *ngSwitchCase=\"types.DefaultTable\"\n        (keyup)=\"onKeyUp($event)\"\n      >\n        <caption *ngIf=\"caption\">\n          {{\n            caption\n          }}\n          {{\n            '(Default Table)'\n          }}\n          <span *ngIf=\"table.inlineEditable\">\n            <button *ngIf=\"!editingMode\" (click)=\"onEditTable(table)\">\n              <!-- <mat-icon>home</mat-icon> -->\n              Edit\n            </button>\n            <button *ngIf=\"editingMode\" (click)=\"onSaveTable(table)\">\n              <!-- <mat-icon>home</mat-icon> -->\n              Save\n            </button>\n          </span>\n        </caption>\n        <thead>\n          <tr>\n            <th *ngFor=\"let map of columnMaps\" style=\"text-align: left;\">\n              {{ map.header }}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let record of table.dataSource; let i = index\">\n            <ng-container *ngFor=\"let map of columnMaps; let j = index\">\n              <td\n                *ngIf=\"!map.editable && !table.inlineEditable\"\n                [ndikuStyleCell]=\"{\n                  contentType: record[map.access(record)],\n                  table: table\n                }\"\n              >\n                {{ record[map.access(record)] | formatCell: map.format }}\n              </td>\n\n              <td\n                *ngIf=\"map.editable && table.inlineEditable\"\n                [id]=\"createCellId(table.tableId, i, j)\"\n                (mousedown)=\"onMouseDown(i, j, map.header)\"\n                (mouseup)=\"onMouseUp(i, j, map.header)\"\n                [ndikuStyleCell]=\"{\n                  contentType: record[map.access(record)],\n                  table: table,\n                  selectCell: { rowId: i, colId: j }\n                }\"\n              >\n                {{ record[map.access(record)] | formatCell: map.format }}\n                <i></i>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n\n      <table\n        mat-table\n        *ngSwitchCase=\"types.MatTable\"\n        [dataSource]=\"table.dataSource\"\n        class=\"mat-elevation-z0\"\n        [id]=\"table.tableId\"\n        (keyup)=\"onKeyUp($event)\"\n      >\n        <caption *ngIf=\"caption\">\n          {{\n            caption\n          }}\n          <span *ngIf=\"table.inlineEditable\">\n            <button\n              mat-icon-button\n              color=\"accent\"\n              *ngIf=\"!editingMode\"\n              (click)=\"onEditTable(table)\"\n            >\n              <!-- <mat-icon>home</mat-icon> -->\n              Edit\n            </button>\n            <button\n              mat-icon-button\n              color=\"accent\"\n              *ngIf=\"editingMode\"\n              (click)=\"onSaveTable(table)\"\n            >\n              <!-- <mat-icon>home</mat-icon> -->\n              Save\n            </button>\n          </span>\n        </caption>\n        <ng-container\n          *ngFor=\"let map of columnMaps; let j = index\"\n          matColumnDef=\"{{ map.header }}\"\n        >\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            {{ map.header }}\n          </th>\n          <ng-container *ngIf=\"!map.editable && !table.inlineEditable\">\n            <td\n              mat-cell\n              class=\"unselected\"\n              *matCellDef=\"let record\"\n              [ndikuStyleCell]=\"{\n                contentType: record[map.access(record)],\n                table: table\n              }\"\n            >\n              {{ record[map.access(record)] | formatCell: map.format }}\n            </td>\n          </ng-container>\n          <ng-container *ngIf=\"map.editable && table.inlineEditable\">\n            <td\n              mat-cell\n              *matCellDef=\"let record; let i = index\"\n              [id]=\"createCellId(table.tableId, i, j)\"\n              (mousedown)=\"onMouseDown(i, j, map.header)\"\n              (mouseup)=\"onMouseUp(i, j, map.header)\"\n              [ndikuStyleCell]=\"{\n                contentType: record[map.access(record)],\n                table: table,\n                selectCell: { rowId: i, colId: j }\n              }\"\n            >\n              {{ record[map.access(record)] | formatCell: map.format }}\n              <i></i>\n            </td>\n          </ng-container>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n      </table>\n    </ng-container>\n  `,\n        styles: [`\n      table {\n        width: 100%;\n      }\n      .mat-row,\n      .mat-header-row {\n        display: flex;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        align-items: center;\n        min-height: 48px;\n        padding: 0 24px;\n      }\n\n      .mat-cell,\n      .mat-header-cell {\n        flex: 1;\n        overflow: hidden;\n        word-wrap: break-word;\n        border-bottom: none;\n      }\n\n      /* below adds cursor  */\n      .cursor {\n        position: relative;\n      }\n      .cursor i {\n        position: absolute;\n        width: 1px;\n        height: 80%;\n        background-color: gray;\n        left: 5px;\n        top: 10%;\n        animation-name: blink;\n        animation-duration: 800ms;\n        animation-iteration-count: infinite;\n        opacity: 1;\n      }\n\n      .cursor :focus + i {\n        display: none;\n      }\n\n      @keyframes blink {\n        from {\n          opacity: 1;\n        }\n        to {\n          opacity: 0;\n        }\n      }\n    `]\n    })\n], TableLayoutComponent);\n\nlet StyleCellDirective = class StyleCellDirective {\n    constructor(el, renderer, tableInlineEditService) {\n        this.el = el;\n        this.renderer = renderer;\n        this.tableInlineEditService = tableInlineEditService;\n    }\n    ngOnChanges(changes) {\n        this.visualizeEditedCells();\n    }\n    ngOnDestroy() {\n        if (this.cellsStatesSub) {\n            this.cellsStatesSub.unsubscribe();\n        }\n        if (this.clearEditedVisualsSub) {\n            this.clearEditedVisualsSub.unsubscribe();\n        }\n    }\n    ngOnInit() {\n        this.handlestylingUndefinedValues();\n        this.visualizeEditedCells();\n        this.cellsStatesSub = this.tableInlineEditService.updateCellStyle$.subscribe((cellStates) => {\n            this.handleStylingSelectedCells();\n        });\n        this.clearEditedVisualsSub = this.tableInlineEditService.clearSavedDataInitiated$.subscribe(() => {\n            this.visualizeEditedCells();\n        });\n    }\n    /**\n     * Styles each cell depending on its value.\n     */\n    handlestylingUndefinedValues() {\n        const types = TableType;\n        if (this.ndikuStyleCell.contentType === undefined &&\n            this.ndikuStyleCell.table.tableType === types.MatTable) {\n            this.renderer.setStyle(this.el.nativeElement, 'color', '#dcdcdc');\n            // this.renderer.setStyle(this.el.nativeElement, 'text-align', 'center');\n        }\n        if (this.ndikuStyleCell.contentType === undefined &&\n            this.ndikuStyleCell.table.tableType === types.DefaultTable) {\n            this.renderer.setStyle(this.el.nativeElement, 'color', '#dcdcdc');\n            this.renderer.setStyle(this.el.nativeElement, 'text-align', 'center');\n        }\n        if (typeof this.ndikuStyleCell.contentType === 'number' &&\n            this.ndikuStyleCell.table.tableType === types.DefaultTable) {\n            this.renderer.setStyle(this.el.nativeElement, 'text-align', 'right');\n            this.renderer.setStyle(this.el.nativeElement, 'padding-right', '10%');\n        }\n    }\n    /**\n     * Adds border to user selected cells\n     */\n    handleStylingSelectedCells() {\n        if (this.ndikuStyleCell.table.inlineEditable) {\n            const rowId = this.ndikuStyleCell.selectCell.rowId;\n            const colId = this.ndikuStyleCell.selectCell.colId;\n            const tableCells = this.ndikuStyleCell.table.tableCellStates\n                .tableCellStates;\n            if (tableCells[rowId][colId]) {\n                this.renderer.setStyle(this.el.nativeElement, 'border', '1px solid #698ad8');\n                this.renderer.addClass(this.el.nativeElement, 'cursor');\n                this.renderer.setStyle(this.el.nativeElement, 'min-height', '22px');\n            }\n            else {\n                this.renderer.setStyle(this.el.nativeElement, 'border', 'none');\n                this.renderer.removeClass(this.el.nativeElement, 'cursor');\n            }\n            this.renderer.setStyle(this.el.nativeElement, '-webkit-user-select', 'none'); /* Webkit  */\n            this.renderer.setStyle(this.el.nativeElement, '-moz-user-select', 'none'); /* Firefox */\n            this.renderer.setStyle(this.el.nativeElement, '-ms-user-select', 'none'); /* IE 10   */\n            this.renderer.setStyle(this.el.nativeElement, '-o-user-select', 'none'); /* Currently not supported in Opera but will be soon */\n            this.renderer.setStyle(this.el.nativeElement, 'user-select', 'none');\n        }\n    }\n    /**\n     * Adds background and border color to edited cells\n     */\n    visualizeEditedCells() {\n        const table = this.ndikuStyleCell.table;\n        const rowId = this.ndikuStyleCell.selectCell.rowId;\n        const colId = this.ndikuStyleCell.selectCell.colId;\n        if (table.hasBeenEdited(table.tableId)) {\n            const editedCells = table.getEditedCellsByTableId(table.tableId);\n            editedCells.map((cell) => {\n                if (cell.rowId === rowId && cell.colId === colId) {\n                    this.renderer.setStyle(this.el.nativeElement, 'border', '1px solid #B00020');\n                    this.renderer.setStyle(this.el.nativeElement, 'background', '#FFB74D');\n                }\n            });\n        }\n        else {\n            this.renderer.setStyle(this.el.nativeElement, 'border', 'none');\n            this.renderer.setStyle(this.el.nativeElement, 'background', 'none');\n        }\n    }\n};\nStyleCellDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: TableInlineEditService }\n];\n__decorate([\n    Input()\n], StyleCellDirective.prototype, \"ndikuStyleCell\", void 0);\nStyleCellDirective = __decorate([\n    Directive({ selector: '[ndikuStyleCell]' })\n], StyleCellDirective);\n\nlet TableLayoutModule = class TableLayoutModule {\n};\nTableLayoutModule = __decorate([\n    NgModule({\n        declarations: [\n            TableLayoutComponent,\n            FormatCellPipe,\n            StyleCellDirective\n        ],\n        imports: [\n            CommonModule,\n            HttpClientModule,\n            MaterialModule\n        ],\n        exports: [\n            HttpClientModule,\n            TableLayoutComponent,\n            FormatCellPipe,\n            StyleCellDirective,\n        ],\n        providers: [CurrencyPipe, DatePipe, PercentPipe],\n    })\n], TableLayoutModule);\n\nclass TableEntryType {\n    constructor(tableTypeName, tableId, dataSource, inlineEditable, nEditableCols, firstEditableRow, firstEditableCol) {\n        this._ALL_TABLES_STATES = [];\n        this._EDITED_CELLS = [];\n        this.inlineEditable = false;\n        this.enableEditingMode = false;\n        this.nRows = 0;\n        if (tableTypeName === 'mat-table') {\n            this.tableType = TableType.MatTable;\n        }\n        else {\n            this.tableType = TableType.DefaultTable;\n        }\n        this.tableId = tableId;\n        this.dataSource = dataSource;\n        this.nRows = this.dataSource.length - 1;\n        this.nEditableCols = nEditableCols;\n        this.inlineEditable = inlineEditable;\n        this.FIRST_EDITABLE_ROW = firstEditableRow ? firstEditableRow : 0;\n        this.FIRST_EDITABLE_COL = firstEditableCol ? firstEditableCol : 0;\n        this.LAST_EDITABLE_ROW = this.nRows;\n        this.LAST_EDITABLE_COL = nEditableCols ? nEditableCols : 0;\n        this.createCellsStates(tableId);\n    }\n    get tableType() {\n        return this._TABLE_TYPE;\n    }\n    set tableType(tableType) {\n        this._TABLE_TYPE = tableType;\n    }\n    get tableId() {\n        return this._TABLE_ID;\n    }\n    set tableId(tableId) {\n        this._TABLE_ID = tableId;\n    }\n    /**\n     * @description Creates table cells selection states\n     * @param tableId contains table id\n     */\n    createCellsStates(tableId) {\n        if (this.inlineEditable && this.nEditableCols) {\n            const temp = [];\n            for (let iIndex = 0; iIndex <= this.nRows; iIndex++) {\n                temp[iIndex] = [];\n                for (let jIndex = 0; jIndex <= this.nEditableCols; jIndex++) {\n                    temp[iIndex][jIndex] = false;\n                }\n            }\n            this.tableCellStates = {\n                tableCellStates: temp,\n                tableId,\n                FIRST_EDITABLE_ROW: this.FIRST_EDITABLE_ROW,\n                LAST_EDITABLE_ROW: this.LAST_EDITABLE_ROW,\n                FIRST_EDITABLE_COL: this.FIRST_EDITABLE_COL,\n                LAST_EDITABLE_COL: this.LAST_EDITABLE_COL,\n            };\n        }\n        else if (this.inlineEditable) {\n            throw new Error('You need to supply number of editable columns for inline editable table.');\n        }\n        else {\n            return;\n        }\n    }\n    /**\n     * Resets cells of the table to default selection states\n     */\n    resetCellsStates() {\n        if (this.tableCellStates.tableCellStates) {\n            const temp = [];\n            for (let iIndex = 0; iIndex <= this.nRows; iIndex++) {\n                temp[iIndex] = [];\n                for (let jIndex = 0; jIndex <= this.nEditableCols; jIndex++) {\n                    temp[iIndex][jIndex] = false;\n                }\n            }\n            this.tableCellStates.tableCellStates = temp;\n            this.tableCellStates.FIRST_EDITABLE_ROW = 0;\n            this.tableCellStates.LAST_EDITABLE_ROW = this.nRows;\n            this.tableCellStates.FIRST_EDITABLE_COL = 0;\n            this.tableCellStates.LAST_EDITABLE_COL = this.nEditableCols;\n        }\n    }\n    set tableCellStates(tableCellStates) {\n        this._ALL_TABLES_STATES.push(tableCellStates);\n    }\n    get tableCellStates() {\n        const tableCellStates = this._ALL_TABLES_STATES.filter((el) => {\n            return el.tableId === this.tableId;\n        });\n        return tableCellStates[0];\n    }\n    /**\n     * @description Returns all edited cells of a give table by table id\n     * @param tableId contains table id\n     */\n    getEditedCellsByTableId(tableId) {\n        const editedCells = this._EDITED_CELLS.filter((el) => {\n            if (tableId) {\n                return el.tableId === tableId;\n            }\n            else {\n                return el.tableId === this.tableId;\n            }\n        });\n        return editedCells;\n    }\n    /**\n     * @description Updates table's edited cells history\n     * @param editedCell contains edited cell properties\n     */\n    saveEditedCell(editedCell) {\n        if (this.hasBeenEdited) {\n            const foundEdited = this._EDITED_CELLS.find((cell, index) => {\n                if (cell.colId === editedCell.colId &&\n                    cell.colId === editedCell.colId &&\n                    cell.tableId === editedCell.tableId) {\n                    return (this._EDITED_CELLS[index] = editedCell);\n                }\n            });\n            if (!foundEdited) {\n                this._EDITED_CELLS.push(editedCell);\n            }\n        }\n        else {\n            this._EDITED_CELLS.push(editedCell);\n        }\n    }\n    /**\n     * @description Returns all edited cells of a column\n     * @param header contains header as a string\n     */\n    getEditedCellsByHeader(header) {\n        const editedCells = this._EDITED_CELLS.filter((el) => {\n            return el.header === header;\n        });\n        return editedCells;\n    }\n    /**\n     * @description Return edited cells by column and row number\n     * @param rowNumber contains row number\n     * @param colNumber contains column number\n     */\n    getEditedCellsByrowCol(rowNumber, colNumber) {\n        let editedCells = [];\n        if (rowNumber && colNumber) {\n            editedCells = this._EDITED_CELLS.filter((el) => {\n                return el.rowId === rowNumber && el.colId === colNumber;\n            });\n        }\n        else if (rowNumber && !colNumber) {\n            editedCells = this._EDITED_CELLS.filter((el) => {\n                return el.rowId === rowNumber;\n            });\n        }\n        else if (colNumber && !rowNumber) {\n            editedCells = this._EDITED_CELLS.filter((el) => {\n                return el.colId === colNumber;\n            });\n        }\n        else {\n            throw new Error('You must provide either a row number or column number');\n        }\n        return editedCells;\n    }\n    /**\n     * @description Returns true if a table has edited cells history\n     * @param tableId contains table id\n     */\n    hasBeenEdited(tableId) {\n        let hasBeenEdited = false;\n        let tableCells = [];\n        if (tableId) {\n            tableCells = this.getEditedCellsByTableId(tableId);\n        }\n        else {\n            tableCells = this.getEditedCellsByTableId();\n        }\n        if (tableCells.length !== 0) {\n            hasBeenEdited = true;\n        }\n        return hasBeenEdited;\n    }\n    /**\n     * @description Removes edited cells history\n     * @param tableId contains table id\n     */\n    clearEditedCells(tableId) {\n        const editedCells = this._EDITED_CELLS.filter((el) => {\n            if (tableId) {\n                return el.tableId !== tableId;\n            }\n            else {\n                return el.tableId !== this.tableId;\n            }\n        });\n        this._EDITED_CELLS = editedCells;\n    }\n}\n\n/*\n * Public API Surface of ng-components-ndiku\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClickElsewhereDirective, ColumnMap, ColumnSetting, FormatCellPipe, MaterialModule, MyErrorStateMatcher, NgComponentsNdikuComponent, NgComponentsNdikuModule, NgComponentsNdikuSelectComponent, NgComponentsNdikuSelectModule, NgComponentsNdikuService, StyleCellDirective, TableEntryType, TableInlineEditService, TableLayoutComponent, TableLayoutModule, TableType, MaterialModule as Éµa };\n//# sourceMappingURL=ng-components-ndiku.js.map\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row content-row\\\">\\n    <div class=\\\"col-12 content-col\\\">\\n      <ndiku-ng-select [name]=\\\"'ng-components-ndiku'\\\"></ndiku-ng-select>\\n      <h2>CLICK THE BUTTON TO SEE MAGIC!</h2>\\n      <h3>This will create an input control.</h3>\\n      <form [formGroup]=\\\"editBaseForm\\\" (ngSubmit)=\\\"onAddItem()\\\">\\n        <p>{{ enteredEmail }}</p>\\n        <ndiku-ng-input\\n          required\\n          notEmpty\\n          parentForm=\\\"editBaseForm\\\"\\n          type=\\\"email\\\"\\n          id=\\\"email\\\"\\n          label=\\\"Email\\\"\\n          placeholder=\\\"Enter email\\\"\\n          onComponentReady=\\\"addChild('emailGroup', $event)\\\"\\n        ></ndiku-ng-input>\\n\\n        <p>{{ enteredPassword }}</p>\\n        <ndiku-ng-input\\n          required\\n          notEmpty\\n          parentForm=\\\"editBaseForm\\\"\\n          type=\\\"password\\\"\\n          id=\\\"password\\\"\\n          label=\\\"Password\\\"\\n          placeholder=\\\"Enter password\\\"\\n          onComponentReady=\\\"addChild('passwordGroup', $event)\\\"\\n        ></ndiku-ng-input>\\n      </form>\\n\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"subscribeToEmailValue()\\\">\\n        Subscribe to Email value\\n      </button>\\n      <button\\n        mat-flat-button\\n        color=\\\"accent\\\"\\n        (click)=\\\"subscribeToPasswordValue()\\\"\\n      >\\n        Subscribe to Password value\\n      </button>\\n      <button mat-flat-button color=\\\"warn\\\" (click)=\\\"unSubscribeToInputValue()\\\">\\n        Unsubscribe to input values\\n      </button>\\n\\n      <!-- below are for table -->\\n      <h2 style=\\\"margin-top: 30px; text-align: center;\\\">TABLE COMPONENT</h2>\\n      <P>\\n        The 'ndiku-table-layout' provides a reusable table that takes care of\\n        mapping data headers appropriately. For example, when we have nested\\n        objects or null values. Also, provides the ability to pass column\\n        configuration to control how data is displayed. See below for\\n        examples...\\n      </P>\\n      <app-table-demo class=\\\"app-table-demo\\\"></app-table-demo>\\n    </div>\\n  </div>\\n</div>\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \".container-fluid {\\n  height: 100% !important;\\n}\\n.container-fluid > .content-row {\\n  height: inherit !important;\\n  padding: 15px;\\n}\\n.container-fluid > .content-row > ng-ndiku-input {\\n  min-height: 50px;\\n}\\n.mat-flat-button {\\n  margin-right: 15px;\\n  margin-top: 15px;\\n}\\n::ng-deep .app-table-demo .container-fluid {\\n  width: 550px;\\n  margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9hZHJpZW4xOS9uZy1jb21wb25lbnRzLW5kaWt1L3Byb2plY3RzL25nLWNvbXBvbmVudHMtbmRpa3Utc2hvd2Nhc2Uvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9uZy1jb21wb25lbnRzLW5kaWt1LXNob3djYXNlL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7QUNDSjtBREFJO0VBQ0ksMEJBQUE7RUFDQSxhQUFBO0FDRVI7QURBUTtFQUNJLGdCQUFBO0FDRVo7QURJQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7QUNERjtBREtBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0FDRkYiLCJmaWxlIjoicHJvamVjdHMvbmctY29tcG9uZW50cy1uZGlrdS1zaG93Y2FzZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItZmx1aWQge1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICAgID4gLmNvbnRlbnQtcm93IHtcbiAgICAgICAgaGVpZ2h0OiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XG5cbiAgICAgICAgPiBuZy1uZGlrdS1pbnB1dCB7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbi5tYXQtZmxhdC1idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gIG1hcmdpbi10b3A6IDE1cHg7XG59XG5cblxuOjpuZy1kZWVwIC5hcHAtdGFibGUtZGVtbyAuY29udGFpbmVyLWZsdWlkIHtcbiAgd2lkdGg6IDU1MHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuIiwiLmNvbnRhaW5lci1mbHVpZCB7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xufVxuLmNvbnRhaW5lci1mbHVpZCA+IC5jb250ZW50LXJvdyB7XG4gIGhlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAxNXB4O1xufVxuLmNvbnRhaW5lci1mbHVpZCA+IC5jb250ZW50LXJvdyA+IG5nLW5kaWt1LWlucHV0IHtcbiAgbWluLWhlaWdodDogNTBweDtcbn1cblxuLm1hdC1mbGF0LWJ1dHRvbiB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuOjpuZy1kZWVwIC5hcHAtdGFibGUtZGVtbyAuY29udGFpbmVyLWZsdWlkIHtcbiAgd2lkdGg6IDU1MHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdfQ== */\";","import { Component } from '@angular/core';\nimport { NgComponentsNdikuService } from 'ng-components-ndiku';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ng-components-ndiku-showcase';\n\n  editBaseForm: FormGroup;\n  enteredEmail = '';\n  enteredPassword = '';\n  emailValueSubscription: Subscription;\n  passwordValueSubscription: Subscription;\n\n  constructor(\n    fb: FormBuilder,\n    private ngComponentsNdikuService: NgComponentsNdikuService\n  ) {\n    this.editBaseForm = fb.group({\n      name: [''],\n    });\n  }\n\n  onAddItem() {}\n\n  subscribeToEmailValue() {\n    this.emailValueSubscription = this.ngComponentsNdikuService.inputValueChanged$.subscribe(\n      (value) => {\n        this.enteredEmail = value;\n      }\n    );\n  }\n\n  subscribeToPasswordValue() {\n    this.passwordValueSubscription = this.ngComponentsNdikuService.inputValueChanged$.subscribe(\n      (value) => {\n        this.enteredPassword = value;\n      }\n    );\n  }\n\n  unSubscribeToInputValue() {\n    if (this.emailValueSubscription) {\n      this.emailValueSubscription.unsubscribe();\n    }\n\n    if (this.passwordValueSubscription) {\n      this.passwordValueSubscription.unsubscribe();\n    }\n  }\n\n  addChild(childName: string, childGroup: FormGroup) {\n    this.editBaseForm.addControl(childName, childGroup);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {\n  MaterialModule,\n  NgComponentsNdikuModule,\n  NgComponentsNdikuSelectModule,\n  TableLayoutModule,\n} from 'ng-components-ndiku';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TableDemoComponent } from './table-data/table-demo.component';\n\n@NgModule({\n  declarations: [AppComponent, TableDemoComponent],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    NgComponentsNdikuModule,\n    NgComponentsNdikuSelectModule,\n    TableLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent, TableDemoComponent],\n})\nexport class AppModule {}\n","import { Project, Person } from './fake.model';\nexport const PROJECTS: Project[] = [\n  {\n    id: 1,\n    name: 'Mercury',\n    cost: 277000000,\n    FIRST_FLIGHT: 'September 9, 1959',\n    status: 'Complete',\n  },\n  {\n    id: 2,\n    name: 'Gemini',\n    cost: 1300000000,\n    FIRST_FLIGHT: 'April 8, 1964',\n    status: 'Complete',\n  },\n  {\n    id: 3,\n    name: 'Apollo',\n    cost: 25400000000,\n    FIRST_FLIGHT: 'February 26, 1966',\n    status: 'Complete',\n  },\n  {\n    id: 4,\n    name: 'Skylab',\n    launch: 'May 14, 1973',\n    status: 'Complete',\n  },\n  {\n    id: 5,\n    name: 'Apollo-Soyuz',\n    launch: 'July 15, 1975',\n    status: 'Complete',\n  },\n  {\n    id: 6,\n    name: 'Space Shuttle',\n    TOTAL_COST: 196000000000,\n    FIRST_FLIGHT: 'August 12, 1977',\n    status: 'Complete',\n  },\n];\nexport const PERSONNEL: Person[] = [\n  {\n    id: 151,\n    name: 'Alan B. Shepard, Jr.',\n    job: 'Astronaut',\n    YEAR_JOINED: 1959,\n    missions: ['MR-3', 'Apollo 14'],\n    crewWith: [\n      {\n        id: 175,\n        name: 'Stuart Roosa',\n      },\n      {\n        id: 176,\n        name: 'Edgar Mitchell',\n      },\n    ],\n  },\n  {\n    id: 152,\n    name: 'Virgil I. Grissom',\n    job: 'Astronaut',\n    YEAR_JOINED: 1959,\n    missions: ['MR-4', 'Apollo 1'],\n  },\n  {\n    id: 153,\n    name: 'John H. Glenn, Jr.',\n    job: 'Astronaut',\n    YEAR_JOINED: 1959,\n    missions: ['MA-6', 'STS-95'],\n  },\n  {\n    id: 154,\n    name: 'M. Scott Carpenter',\n    job: 'Astronaut',\n    YEAR_JOINED: 1959,\n    missions: ['MA-7'],\n  },\n  {\n    id: 161,\n    name: 'James A. Lovell',\n    job: 'Astronaut',\n    YEAR_JOINED: 1962,\n    missions: ['Gemini 7', 'Gemini 12', 'Apollo 8', 'Apollo 13'],\n    manager: {\n      id: 157,\n      name: 'Deke Slayton',\n    },\n  },\n];\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Project, Person } from './fake.model';\nimport { TableDataService } from './tableDataService';\nimport { ColumnSetting, TableInlineEditService, TableEntryType } from 'ng-components-ndiku';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: `app-table-demo`,\n  template: `\n    <div class=\"container-fluid\">\n      <ng-container>\n        <button\n          mat-flat-button\n          color=\"primary\"\n          (click)=\"clearEditedTableData()\"\n        >\n          Clear Edited Table data\n        </button>\n      </ng-container>\n\n      <ndiku-table-layout\n        [table]=\"tableConfig\"\n        [caption]=\"'NASA Projects'\"\n        [settings]=\"projectsTableConfigSettings\"\n        class=\" tableCaption projectsTable\"\n      >\n      </ndiku-table-layout>\n      <ndiku-table-layout\n        [table]=\"peapleTableConfig\"\n        [caption]=\"'NASA Astronauts'\"\n        [settings]=\"personnelSettings\"\n        class=\" tableCaption astronautsTable\"\n      >\n      </ndiku-table-layout>\n    </div>\n  `,\n  styles: [\n    `\n      ::ng-deep .tableCaption table caption {\n        font-size: 28px;\n        font-weight: bold;\n        padding-bottom: 20px;\n      }\n\n      ::ng-deep .tableCaption table {\n        background-color: white;\n        margin-top: 30px;\n      }\n    `,\n  ],\n})\nexport class TableDemoComponent implements OnInit, OnDestroy {\n  projectsTableConfigSettings: ColumnSetting[] = [\n    {\n      primaryKey: 'name',\n      header: 'Name',\n      editable: true,\n    },\n    {\n      primaryKey: 'first_Launch',\n      header: 'First Launch',\n      format: { formatType: 'date', dateFormat: 'short' },\n      alternativeKeys: ['launch', 'FIRST_FLIGHT'],\n      editable: true,\n    },\n    {\n      primaryKey: 'cost',\n      header: 'Cost',\n      format: { formatType: 'currency', currencyCode: 'USD' },\n      alternativeKeys: ['TOTAL_COST'],\n      editable: true,\n    },\n  ];\n\n  personnelSettings: ColumnSetting[] = [\n    {\n      primaryKey: 'name',\n      editable: true,\n    },\n    {\n      primaryKey: 'YEAR_JOINED',\n      header: 'Joined',\n      format: { formatType: 'date', dateFormat: 'yyyy' },\n      editable: true,\n    },\n    {\n      primaryKey: 'missions',\n      editable: true,\n    },\n    {\n      primaryKey: 'manager',\n      editable: true,\n    },\n    {\n      primaryKey: 'crewWith',\n      header: 'Crew mates',\n      editable: true,\n    },\n  ];\n\n  tableConfig: TableEntryType;\n  peapleTableConfig: TableEntryType;\n\n  projects: Project[];\n  people: Person[];\n\n  inlineTableDataSub: Subscription;\n\n  constructor(\n    private tableDataService: TableDataService,\n    private inlineTableDataService: TableInlineEditService\n  ) {}\n\n  ngOnDestroy(): void {\n    if (this.inlineTableDataSub) {\n      this.inlineTableDataSub.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.projects = this.tableDataService.getProjects();\n    this.people = this.tableDataService.getPersonnel();\n    this.tableConfig = new TableEntryType(\n      'mat-table',\n      'projectsTable',\n      this.projects,\n      true,\n      3\n    );\n    this.peapleTableConfig = new TableEntryType(\n      'default',\n      'peapleTable',\n      this.people,\n      true,\n      5\n    );\n\n    this.inlineTableDataSub = this.inlineTableDataService.dataSource$.subscribe(\n      (data) => {\n        if (data) {\n          if (data.table.tableId === this.tableConfig.tableId) {\n            this.tableConfig = data.table;\n            this.projects = data.table.dataSource;\n            console.log(`THESE ARE RETURNED: ${data.table.dataSource[0].cost}`);\n          } else {\n            this.peapleTableConfig = data.table;\n            this.people = data.table.dataSource;\n          }\n        }\n      }\n    );\n  }\n\n  clearEditedTableData() {\n    if (this.tableConfig.hasBeenEdited(this.tableConfig.tableId)) {\n      this.tableConfig.clearEditedCells(this.tableConfig.tableId);\n    }\n    if (this.peapleTableConfig.hasBeenEdited(this.peapleTableConfig.tableId)) {\n      this.peapleTableConfig.clearEditedCells(this.peapleTableConfig.tableId);\n    }\n    this.inlineTableDataService.clearSavedDataInitiated$.next(); // send an event to clear colored edited data\n  }\n}\n","// ./project-center/project.service.ts\nimport { Injectable } from '@angular/core';\nimport { Project, Person } from './fake.model';\nimport { PROJECTS, PERSONNEL } from './fake-data';\n\n@Injectable({ providedIn: 'root' })\nexport class TableDataService {\n  getProjects(): Project[] {\n    // actual implementation would use async method\n    return PROJECTS;\n  }\n  getPersonnel(): Person[] {\n    return PERSONNEL;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { APP_CONFIGS } from './app.configs';\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}